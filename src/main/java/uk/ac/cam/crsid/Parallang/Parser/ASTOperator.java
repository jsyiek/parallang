package uk.ac.cam.crsid.Parallang.Parser;

/* Generated By:JJTree: Do not edit this line. ASTOperator.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTOperator extends SimpleNode {
  private Operator operator;

  public enum Operator {
    PLUS,
    SUB,
    TIMES,
    DIV,
    EXP,
    EQ,
    NEQ,
    GREATER,
    GREATER_EQUAL,
    LESS,
    LESS_EQUAL
  }

  public void setOperator(String op) {
      switch (op) {
        case "+" : operator = Operator.PLUS; break;
        case "-": operator = Operator.SUB; break;
        case "*": operator = Operator.TIMES; break;
        case "/": operator = Operator.DIV; break;
        case "==": operator = Operator.EQ; break;
        case "!=": operator = Operator.NEQ; break;
        case ">": operator = Operator.GREATER; break;
        case "<": operator = Operator.LESS; break;
        case ">=": operator = Operator.GREATER_EQUAL; break;
        case "<=": operator = Operator.LESS_EQUAL; break;
        default: throw new RuntimeException("Invalid operator: " + op);
      }
  }

  public Operator getOperator() { return operator; }

  public ASTOperator(int id) {
    super(id);
  }

  public ASTOperator(ParallogParser p, int id) {
    super(p, id);
  }

  public String toString() {
    return "Operator: " + operator;
  }

}

/* JavaCC - OriginalChecksum=f739edd435716c8e82ea980d4140f8c9 (do not edit this line) */
